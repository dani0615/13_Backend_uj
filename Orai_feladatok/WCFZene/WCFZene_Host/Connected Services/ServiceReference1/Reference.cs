//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFZene_Host.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Eloado", Namespace="http://schemas.datacontract.org/2004/07/WCFZene.Models")]
    [System.SerializableAttribute()]
    public partial class Eloado : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NemzetisegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NevField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SzoloField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nemzetiseg {
            get {
                return this.NemzetisegField;
            }
            set {
                if ((object.ReferenceEquals(this.NemzetisegField, value) != true)) {
                    this.NemzetisegField = value;
                    this.RaisePropertyChanged("Nemzetiseg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nev {
            get {
                return this.NevField;
            }
            set {
                if ((object.ReferenceEquals(this.NevField, value) != true)) {
                    this.NevField = value;
                    this.RaisePropertyChanged("Nev");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Szolo {
            get {
                return this.SzoloField;
            }
            set {
                if ((this.SzoloField.Equals(value) != true)) {
                    this.SzoloField = value;
                    this.RaisePropertyChanged("Szolo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertEloado", ReplyAction="http://tempuri.org/IService1/InsertEloadoResponse")]
        string InsertEloado(WCFZene_Host.ServiceReference1.Eloado eloado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertEloado", ReplyAction="http://tempuri.org/IService1/InsertEloadoResponse")]
        System.Threading.Tasks.Task<string> InsertEloadoAsync(WCFZene_Host.ServiceReference1.Eloado eloado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEloadok", ReplyAction="http://tempuri.org/IService1/GetEloadokResponse")]
        WCFZene_Host.ServiceReference1.Eloado[] GetEloadok();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEloadok", ReplyAction="http://tempuri.org/IService1/GetEloadokResponse")]
        System.Threading.Tasks.Task<WCFZene_Host.ServiceReference1.Eloado[]> GetEloadokAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEloado", ReplyAction="http://tempuri.org/IService1/UpdateEloadoResponse")]
        string UpdateEloado(WCFZene_Host.ServiceReference1.Eloado eloado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEloado", ReplyAction="http://tempuri.org/IService1/UpdateEloadoResponse")]
        System.Threading.Tasks.Task<string> UpdateEloadoAsync(WCFZene_Host.ServiceReference1.Eloado eloado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEloado", ReplyAction="http://tempuri.org/IService1/DeleteEloadoResponse")]
        string DeleteEloado(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEloado", ReplyAction="http://tempuri.org/IService1/DeleteEloadoResponse")]
        System.Threading.Tasks.Task<string> DeleteEloadoAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WCFZene_Host.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WCFZene_Host.ServiceReference1.IService1>, WCFZene_Host.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertEloado(WCFZene_Host.ServiceReference1.Eloado eloado) {
            return base.Channel.InsertEloado(eloado);
        }
        
        public System.Threading.Tasks.Task<string> InsertEloadoAsync(WCFZene_Host.ServiceReference1.Eloado eloado) {
            return base.Channel.InsertEloadoAsync(eloado);
        }
        
        public WCFZene_Host.ServiceReference1.Eloado[] GetEloadok() {
            return base.Channel.GetEloadok();
        }
        
        public System.Threading.Tasks.Task<WCFZene_Host.ServiceReference1.Eloado[]> GetEloadokAsync() {
            return base.Channel.GetEloadokAsync();
        }
        
        public string UpdateEloado(WCFZene_Host.ServiceReference1.Eloado eloado) {
            return base.Channel.UpdateEloado(eloado);
        }
        
        public System.Threading.Tasks.Task<string> UpdateEloadoAsync(WCFZene_Host.ServiceReference1.Eloado eloado) {
            return base.Channel.UpdateEloadoAsync(eloado);
        }
        
        public string DeleteEloado(int id) {
            return base.Channel.DeleteEloado(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEloadoAsync(int id) {
            return base.Channel.DeleteEloadoAsync(id);
        }
    }
}
